// Code generated by MockGen. DO NOT EDIT.
// Source: crwatcher/watcher.go

package crwatcher

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
)

// MockResourceController is a mock of ResourceController interface
type MockResourceController struct {
	ctrl     *gomock.Controller
	recorder *MockResourceControllerMockRecorder
}

// MockResourceControllerMockRecorder is the mock recorder for MockResourceController
type MockResourceControllerMockRecorder struct {
	mock *MockResourceController
}

// NewMockResourceController creates a new mock instance
func NewMockResourceController(ctrl *gomock.Controller) *MockResourceController {
	mock := &MockResourceController{ctrl: ctrl}
	mock.recorder = &MockResourceControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockResourceController) EXPECT() *MockResourceControllerMockRecorder {
	return _m.recorder
}

// ResourceAdded mocks base method
func (_m *MockResourceController) ResourceAdded(resource *unstructured.Unstructured) {
	_m.ctrl.Call(_m, "ResourceAdded", resource)
}

// ResourceAdded indicates an expected call of ResourceAdded
func (_mr *MockResourceControllerMockRecorder) ResourceAdded(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ResourceAdded", reflect.TypeOf((*MockResourceController)(nil).ResourceAdded), arg0)
}

// ResourceUpdated mocks base method
func (_m *MockResourceController) ResourceUpdated(oldResource *unstructured.Unstructured, newResource *unstructured.Unstructured) {
	_m.ctrl.Call(_m, "ResourceUpdated", oldResource, newResource)
}

// ResourceUpdated indicates an expected call of ResourceUpdated
func (_mr *MockResourceControllerMockRecorder) ResourceUpdated(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ResourceUpdated", reflect.TypeOf((*MockResourceController)(nil).ResourceUpdated), arg0, arg1)
}

// ResourceDeleted mocks base method
func (_m *MockResourceController) ResourceDeleted(resource *unstructured.Unstructured) {
	_m.ctrl.Call(_m, "ResourceDeleted", resource)
}

// ResourceDeleted indicates an expected call of ResourceDeleted
func (_mr *MockResourceControllerMockRecorder) ResourceDeleted(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ResourceDeleted", reflect.TypeOf((*MockResourceController)(nil).ResourceDeleted), arg0)
}

// ResourceDeleted mocks base method
func (_m *MockResourceController) SetSynced() {
	_m.ctrl.Call(_m, "SetSynced")
}
